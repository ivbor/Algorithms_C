name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y gcc g++ clang clang-tidy clang-format valgrind cmake make

    - name: Verify Makefile exists
      run: |
        ls -lah Algorithms_C
        cat Algorithms_C/Makefile

    - name: Find all C and header files
      id: find_files
      run: |
        cd Algorithms_C
        FILES=$(find . -not -path "./dp_solutions_from_page/*" -name '*.c' -o -name '*.h' | tr '\n' ' ')
        echo "FILES=$FILES" >> $GITHUB_ENV

    - name: Run Clang-Format
      run: |
        find Algorithms_C -type f \( -name '*.c' -o -name '*.h' \) | xargs clang-format -i --verbose
        if ! git diff --exit-code; then
          echo "Clang-Format found issues!"
          find Algorithms_C -type f \( -name '*.c' -o -name '*.h' \) | xargs clang-format --dry-run --verbose
          exit 1
        fi

    - name: Run Clang-Tidy
      run: |
        cd Algorithms_C
        clang-tidy $FILES -- -IAlgorithms_C/include -IAlgorithms_C/src/headers -fno-caret-diagnostics -fdiagnostics-show-option

    - name: Run Tests with ASan
      run: |
        cd Algorithms_C
        make
        export LD_PRELOAD=$(gcc -print-file-name=libasan.so)
        ./test/bin/all_tests || exit 1
  
    - name: Run GCC Debug Build with Valgrind
      run: |
        cd Algorithms_C
        make clean
        make BIN=""
        valgrind --quiet --leak-check=full --error-exitcode=123 ./test/bin/all_tests || exit 1  
  
    - name: Build and Run Tests
      run: |
        cd Algorithms_C
        make clean
        make
        if make | grep -q 'All tests passed!'; then
          echo "All tests passed!"
        else
          echo "Some tests failed!"
          exit 1
        fi

    - name: Check for errors in build
      run: |
        if [ $? -ne 0 ]; then
          echo "Error in the build process"
          exit 1
        fi